{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbabozhko/Development/Web/mbworks-master/src/pages/Certificates.jsx\";\nimport React from 'react';\nimport \"./Certificates.css\";\nimport firebase from '../Firebase';\nimport Navbar from '../components/Navbar.jsx';\nimport Footer from '../components/Footer.jsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport cert_html from '../assets/certificates/cert_html.jpg';\nimport cert_css from '../assets/certificates/cert_css.jpg';\nimport cert_js from '../assets/certificates/cert_js.jpg';\nimport cert_java from '../assets/certificates/cert_java.jpg';\nimport cert_sql from '../assets/certificates/cert_sql.jpg';\nimport cert_jquery from '../assets/certificates/cert_jquery.jpg';\nimport cert_hg_schoole from '../assets/certificates/highschool.jpg';\nimport cert_hackeru from '../assets/certificates/cert_hackeru.jpg';\nimport ibm_hackaton from '../assets/certificates/ibm_hackaton.jpeg';\nimport cert_node_js from '../assets/certificates/cert_node_js.png';\nimport cert_helsinki_ai from '../assets/certificates/certificate_elements_of_ai.png';\nimport cert_analitics from '../assets/certificates/cert_analitics.jpg';\nconst tileData = [{\n  img: cert_html,\n  title: 'Image'\n}, {\n  img: cert_css,\n  title: 'Image'\n}, {\n  img: cert_html,\n  title: 'Image'\n}, {\n  img: cert_css,\n  title: 'Image'\n}, {\n  img: cert_html,\n  title: 'Image'\n}, {\n  img: cert_css,\n  title: 'Image'\n}, {\n  img: cert_html,\n  title: 'Image'\n}, {\n  img: cert_css,\n  title: 'Image'\n}, {\n  img: cert_html,\n  title: 'Image'\n}, {\n  img: cert_css,\n  title: 'Image'\n}];\nexport default class Certificates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    const storage = firebase.storage();\n    const sertificatesRef = storage.ref().child('mbworks/images/');\n    sertificatesRef.listAll().then(res => {\n      var data = [];\n      var allData = res.items;\n      res.items.forEach(ref => {\n        ref.getDownloadURL().then(url => {\n          data.push({\n            image: url,\n            title: ref.name.split('.')[0]\n          });\n        }).catch(err => {\n          this.setState({\n            isLoaded: true,\n            error: err\n          });\n        }).finally(() => {\n          if (data.length == allData.length) {\n            data.sort((p0, p1) => {\n              return p0.title.split('_')[1] - p1.title.split('_')[1];\n            });\n            data.forEach(el => {\n              console.log(el.title.split('_')[0]); // el.title = el.title.split['_'][0] \n            });\n            this.setState({\n              isLoaded: true,\n              items: data\n            });\n          }\n        });\n      });\n    }).catch(err => {\n      this.setState({\n        isLoaded: true,\n        error: err\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        cols: 3,\n        cellHeight: 180,\n        className: \"gridList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, items.map(tile => React.createElement(GridListTile, {\n        key: tile.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"sert-image\",\n        onClick: this.onClick,\n        src: tile.image,\n        alt: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(GridListTileBar, {\n        title: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n    }\n  }\n\n  onClick(ev) {\n    console.log(ev);\n  }\n\n}","map":{"version":3,"sources":["/Users/michaelbabozhko/Development/Web/mbworks-master/src/pages/Certificates.jsx"],"names":["React","firebase","Navbar","Footer","GridList","GridListTile","GridListTileBar","cert_html","cert_css","cert_js","cert_java","cert_sql","cert_jquery","cert_hg_schoole","cert_hackeru","ibm_hackaton","cert_node_js","cert_helsinki_ai","cert_analitics","tileData","img","title","Certificates","Component","constructor","props","state","error","isLoaded","items","componentDidMount","storage","sertificatesRef","ref","child","listAll","then","res","data","allData","forEach","getDownloadURL","url","push","image","name","split","catch","err","setState","finally","length","sort","p0","p1","el","console","log","render","message","map","tile","onClick","ev"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./Certificates.css\";\nimport firebase from '../Firebase';\nimport Navbar from '../components/Navbar.jsx';\nimport Footer from '../components/Footer.jsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nimport cert_html from '../assets/certificates/cert_html.jpg';\nimport cert_css from '../assets/certificates/cert_css.jpg';\nimport cert_js from '../assets/certificates/cert_js.jpg';\nimport cert_java from '../assets/certificates/cert_java.jpg';\nimport cert_sql from '../assets/certificates/cert_sql.jpg';\nimport cert_jquery from '../assets/certificates/cert_jquery.jpg';\nimport cert_hg_schoole from '../assets/certificates/highschool.jpg';\nimport cert_hackeru from '../assets/certificates/cert_hackeru.jpg';\nimport ibm_hackaton from '../assets/certificates/ibm_hackaton.jpeg';\nimport cert_node_js from '../assets/certificates/cert_node_js.png';\nimport cert_helsinki_ai from '../assets/certificates/certificate_elements_of_ai.png';\nimport cert_analitics from '../assets/certificates/cert_analitics.jpg';\n\nconst tileData = [\n    {\n      img: cert_html,\n      title: 'Image',\n     },\n     {\n      img: cert_css,\n      title: 'Image',\n     },\n     {\n      img: cert_html,\n      title: 'Image',\n     },\n     {\n      img: cert_css,\n      title: 'Image',\n     },\n     {\n      img: cert_html,\n      title: 'Image',\n     },\n     {\n      img: cert_css,\n      title: 'Image',\n     },\n     {\n      img: cert_html,\n      title: 'Image',\n     },\n     {\n      img: cert_css,\n      title: 'Image',\n     },\n     {\n      img: cert_html,\n      title: 'Image',\n     },\n     {\n      img: cert_css,\n      title: 'Image',\n     },\n   ];\n\n\nexport default class Certificates extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n  } \n\n  componentDidMount(){\n    const storage = firebase.storage();\n    const sertificatesRef = storage.ref().child('mbworks/images/');\n\n    sertificatesRef.listAll()\n    .then((res) => {\n      var data = [];\n      var allData = res.items;\n      res.items.forEach(ref => {\n        ref.getDownloadURL()\n        .then((url) => {\n          data.push({image: url, title: ref.name.split('.')[0] });\n        })\n        .catch((err) => {\n          this.setState({\n            isLoaded: true,\n            error:err\n          });\n        })\n        .finally(() => {\n          if (data.length == allData.length){\n            data.sort((p0, p1) => {\n              return p0.title.split('_')[1] - p1.title.split('_')[1] \n            });\n            data.forEach((el) => { \n              console.log(el.title.split('_')[0] )\n              // el.title = el.title.split['_'][0] \n            });\n            this.setState({\n              isLoaded:true,\n              items: data\n            })\n          }\n        });\n      })\n    })\n    .catch((err) => {\n      this.setState({\n        isLoaded: true,\n        error:err\n      });\n    });\n\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n        return(\n          <div className=\"bg-dark\">\n            <Navbar/>\n              <div className=\"container\">\n                <div className=\"bg-dark root\">\n                  <GridList cols={3} cellHeight={180} className=\"gridList\">\n                    {items.map((tile) => (\n                      <GridListTile key={tile.image}>\n                        <img class=\"sert-image\" onClick={this.onClick} src={tile.image} alt={tile.title} />\n                        <GridListTileBar title={tile.title} />\n                      </GridListTile>\n                    ))}\n                  </GridList>\n                </div>\n              </div>\n            <Footer/>\n          </div>\n        );\n    }\n  }\n\n  onClick(ev){\n    console.log(ev);\n  }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}