{"ast":null,"code":"import _slicedToArray from \"/Users/michaelbabozhko/Development/Web/mbworks-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/michaelbabozhko/Development/Web/mbworks-master/src/pages/Certificates.jsx\";\nimport React from 'react';\nimport \"./Certificates.css\";\nimport firebase from '../Firebase';\nimport Navbar from '../components/Navbar.jsx';\nimport Footer from '../components/Footer.jsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport cert_html from '../assets/certificates/cert_html.jpg';\nimport cert_css from '../assets/certificates/cert_css.jpg';\nimport cert_js from '../assets/certificates/cert_js.jpg';\nimport cert_java from '../assets/certificates/cert_java.jpg';\nimport cert_sql from '../assets/certificates/cert_sql.jpg';\nimport cert_jquery from '../assets/certificates/cert_jquery.jpg';\nimport cert_hg_schoole from '../assets/certificates/highschool.jpg';\nimport cert_hackeru from '../assets/certificates/cert_hackeru.jpg';\nimport ibm_hackaton from '../assets/certificates/ibm_hackaton.jpeg';\nimport cert_node_js from '../assets/certificates/cert_node_js.png';\nimport cert_helsinki_ai from '../assets/certificates/certificate_elements_of_ai.png';\nimport cert_analitics from '../assets/certificates/cert_analitics.jpg';\nexport default class Certificates extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectPhoto = image => {\n      this.showImageFullSize(image);\n      console.log(image);\n    };\n\n    this.handleClickOpen = () => {\n      this.setOpen(true);\n    };\n\n    this.handleClose = () => {\n      this.setOpen(false);\n    };\n\n    this.showImageFullSize = (image, text) => {\n      React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Button, {\n        autoFocus: true,\n        onClick: handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Disagree\"), React.createElement(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Agree\")));\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      isTitleToggleOn: false\n    };\n  }\n\n  componentDidMount() {\n    const storage = firebase.storage();\n    const sertificatesRef = storage.ref().child('mbworks/images/');\n\n    const _React$useState = React.useState(false),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          open = _React$useState2[0],\n          setOpen = _React$useState2[1];\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    sertificatesRef.listAll().then(res => {\n      var data = [];\n      var allData = res.items;\n      res.items.forEach(ref => {\n        ref.getDownloadURL().then(url => {\n          data.push({\n            image: url,\n            title: ref.name.split('.')[0]\n          });\n        }).catch(err => {\n          this.setState({\n            isLoaded: true,\n            error: err\n          });\n        }).finally(() => {\n          if (data.length == allData.length) {\n            data.sort((p0, p1) => {\n              return p0.title.split('_')[1] - p1.title.split('_')[1];\n            });\n            data.forEach(el => {\n              el.title = el.title.split('_')[0];\n            });\n            this.setState({\n              isLoaded: true,\n              items: data\n            });\n          }\n        });\n      });\n    }).catch(err => {\n      this.setState({\n        isLoaded: true,\n        error: err\n      });\n    });\n  }\n\n  toggleTileBar() {\n    this.tileBarVisibility = !this.tileBarVisibility;\n    return this.tileBarVisibility;\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        cols: 3,\n        cellHeight: 180,\n        className: \"gridList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, items.map(tile => React.createElement(GridListTile, {\n        key: tile.image,\n        onClick: () => this.selectPhoto(tile),\n        onHover: () => this.toggleTileBar(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image-cert\",\n        onClick: this.onClick,\n        src: tile.image,\n        alt: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(GridListTileBar, {\n        subtitle: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/michaelbabozhko/Development/Web/mbworks-master/src/pages/Certificates.jsx"],"names":["React","firebase","Navbar","Footer","GridList","GridListTile","GridListTileBar","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","cert_html","cert_css","cert_js","cert_java","cert_sql","cert_jquery","cert_hg_schoole","cert_hackeru","ibm_hackaton","cert_node_js","cert_helsinki_ai","cert_analitics","Certificates","Component","constructor","props","selectPhoto","image","showImageFullSize","console","log","handleClickOpen","setOpen","handleClose","text","fullScreen","open","state","error","isLoaded","items","isTitleToggleOn","componentDidMount","storage","sertificatesRef","ref","child","useState","theme","breakpoints","down","listAll","then","res","data","allData","forEach","getDownloadURL","url","push","title","name","split","catch","err","setState","finally","length","sort","p0","p1","el","toggleTileBar","tileBarVisibility","render","message","map","tile","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./Certificates.css\";\nimport firebase from '../Firebase';\nimport Navbar from '../components/Navbar.jsx';\nimport Footer from '../components/Footer.jsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport cert_html from '../assets/certificates/cert_html.jpg';\nimport cert_css from '../assets/certificates/cert_css.jpg';\nimport cert_js from '../assets/certificates/cert_js.jpg';\nimport cert_java from '../assets/certificates/cert_java.jpg';\nimport cert_sql from '../assets/certificates/cert_sql.jpg';\nimport cert_jquery from '../assets/certificates/cert_jquery.jpg';\nimport cert_hg_schoole from '../assets/certificates/highschool.jpg';\nimport cert_hackeru from '../assets/certificates/cert_hackeru.jpg';\nimport ibm_hackaton from '../assets/certificates/ibm_hackaton.jpeg';\nimport cert_node_js from '../assets/certificates/cert_node_js.png';\nimport cert_helsinki_ai from '../assets/certificates/certificate_elements_of_ai.png';\nimport cert_analitics from '../assets/certificates/cert_analitics.jpg';\n\nexport default class Certificates extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n        error: null,\n        isLoaded: false,\n        items: [],\n        isTitleToggleOn: false\n      };\n  } \n\n  componentDidMount(){\n    const storage = firebase.storage();\n    const sertificatesRef = storage.ref().child('mbworks/images/');\n\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    sertificatesRef.listAll()\n    .then((res) => {\n      var data = [];\n      var allData = res.items;\n      res.items.forEach(ref => {\n        ref.getDownloadURL()\n        .then((url) => {\n          data.push({image: url, title: ref.name.split('.')[0] });\n        })\n        .catch((err) => {\n          this.setState({\n            isLoaded: true,\n            error:err\n          });\n        })\n        .finally(() => {\n          if (data.length == allData.length){\n            data.sort((p0, p1) => {\n              return p0.title.split('_')[1] - p1.title.split('_')[1] \n            });\n            data.forEach((el) => { \n              el.title = el.title.split('_')[0] \n            });\n            this.setState({\n              isLoaded:true,\n              items: data\n            })\n          }\n        });\n      })\n    })\n    .catch((err) => {\n      this.setState({\n        isLoaded: true,\n        error:err\n      });\n    });\n\n  }\n\n  selectPhoto = (image) => {\n    this.showImageFullSize(image)\n    console.log(image);\n  }\n\n  handleClickOpen = () => {\n    this.setOpen(true);\n  };\n\n  handleClose = () => {\n    this.setOpen(false);\n  };\n\n  showImageFullSize = (image, text) =>{\n    <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n  }\n\n  toggleTileBar() {\n    this.tileBarVisibility = !this.tileBarVisibility\n    return this.tileBarVisibility\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n        return(\n          <div className=\"bg-dark\">\n            <Navbar/>\n              <div className=\"container\">\n                <div className=\"bg-dark root\">\n                  <GridList cols={3} cellHeight={180} className=\"gridList\">\n                    {items.map((tile) => (\n                      <GridListTile key={tile.image} onClick={() => this.selectPhoto(tile)} onHover={() => this.toggleTileBar()}>\n                        <img className=\"image-cert\" onClick={this.onClick} src={tile.image} alt={tile.title} />\n                        <GridListTileBar subtitle={tile.title}/>\n                      </GridListTile>\n                    ))}\n                  </GridList>\n                </div>\n              </div>\n            <Footer/>\n          </div>\n        );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}