{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbabozhko/Development/Web/mbworks-master/src/pages/Certificates.jsx\";\nimport React from 'react';\nimport \"./Certificates.css\";\nimport firebase from '../Firebase';\nimport Navbar from '../components/Navbar.jsx';\nimport Footer from '../components/Footer.jsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nexport default class Certificates extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectPhoto = image => {\n      this.showImageFullSize(image);\n    };\n\n    this.handleClickOpen = tile => {\n      this.setState({\n        open: true,\n        selectedImage: tile.image,\n        selectedTitle: tile.title\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.showImageFullSize = () => {\n      return React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.selectedTitle), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"dialog-image\",\n        src: this.state.selectedImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Button, {\n        autoFocus: true,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Cancel\")));\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      isTitleToggleOn: false,\n      open: false,\n      selectedImage: \"\",\n      selectedTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const storage = firebase.storage();\n    const sertificatesRef = storage.ref().child('mbworks/images/');\n    this.useWindowDimensions();\n    sertificatesRef.listAll().then(res => {\n      var data = [];\n      var allData = res.items;\n      res.items.forEach(ref => {\n        ref.getDownloadURL().then(url => {\n          data.push({\n            image: url,\n            title: ref.name.split('.')[0]\n          });\n        }).catch(err => {\n          this.setState({\n            isLoaded: true,\n            error: err\n          });\n        }).finally(() => {\n          if (data.length == allData.length) {\n            data.sort((p0, p1) => {\n              return p0.title.split('_')[1] - p1.title.split('_')[1];\n            });\n            data.forEach(el => {\n              el.title = el.title.split('_')[0];\n            });\n            this.setState({\n              isLoaded: true,\n              items: data\n            });\n          }\n        });\n      });\n    }).catch(err => {\n      this.setState({\n        isLoaded: true,\n        error: err\n      });\n    });\n  }\n\n  getWindowDimensions() {\n    const _window = window,\n          width = _window.innerWidth,\n          height = _window.innerHeight;\n    return {\n      width,\n      height\n    };\n  }\n\n  useWindowDimensions() {\n    this.setState({\n      windowDimensions: getWindowDimensions()\n    });\n    React.useEffect(() => {\n      function handleResize() {\n        this.setState({\n          windowDimensions: getWindowDimensions()\n        });\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n    return windowDimensions;\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        cols: this.getCellsAmount(),\n        cellHeight: 180,\n        className: \"gridList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, items.map(tile => React.createElement(GridListTile, {\n        key: tile.image,\n        onClick: () => this.handleClickOpen(tile),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image-cert\",\n        src: tile.image,\n        alt: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(GridListTileBar, {\n        subtitle: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })))))), this.showImageFullSize(), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/michaelbabozhko/Development/Web/mbworks-master/src/pages/Certificates.jsx"],"names":["React","firebase","Navbar","Footer","GridList","GridListTile","GridListTileBar","Button","Dialog","DialogActions","DialogContent","DialogTitle","Certificates","Component","constructor","props","selectPhoto","image","showImageFullSize","handleClickOpen","tile","setState","open","selectedImage","selectedTitle","title","handleClose","state","error","isLoaded","items","isTitleToggleOn","componentDidMount","storage","sertificatesRef","ref","child","useWindowDimensions","listAll","then","res","data","allData","forEach","getDownloadURL","url","push","name","split","catch","err","finally","length","sort","p0","p1","el","getWindowDimensions","window","width","innerWidth","height","innerHeight","windowDimensions","useEffect","handleResize","addEventListener","removeEventListener","render","message","getCellsAmount","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./Certificates.css\";\nimport firebase from '../Firebase';\nimport Navbar from '../components/Navbar.jsx';\nimport Footer from '../components/Footer.jsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class Certificates extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n        error: null,\n        isLoaded: false,\n        items: [],\n        isTitleToggleOn: false,\n        open: false,\n        selectedImage: \"\",\n        selectedTitle: \"\"\n      };\n  } \n\n  componentDidMount(){\n    const storage = firebase.storage();\n    const sertificatesRef = storage.ref().child('mbworks/images/');\n    this.useWindowDimensions()\n    sertificatesRef.listAll()\n    .then((res) => {\n      var data = [];\n      var allData = res.items;\n      res.items.forEach(ref => {\n        ref.getDownloadURL()\n        .then((url) => {\n          data.push({image: url, title: ref.name.split('.')[0] });\n        })\n        .catch((err) => {\n          this.setState({\n            isLoaded: true,\n            error:err\n          });\n        })\n        .finally(() => {\n          if (data.length == allData.length){\n            data.sort((p0, p1) => {\n              return p0.title.split('_')[1] - p1.title.split('_')[1] \n            });\n            data.forEach((el) => { \n              el.title = el.title.split('_')[0] \n            });\n            this.setState({\n              isLoaded:true,\n              items: data\n            })\n          }\n        });\n      })\n    })\n    .catch((err) => {\n      this.setState({\n        isLoaded: true,\n        error:err\n      });\n    });\n\n  }\n\n  getWindowDimensions(){\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  }\n  \n  useWindowDimensions() {\n    this.setState({\n      windowDimensions: getWindowDimensions()\n    }); \n  \n    React.useEffect(() => {\n      function handleResize() {\n        this.setState({\n          windowDimensions: getWindowDimensions()\n        });\n      }\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return windowDimensions;\n  }\n\n  selectPhoto = (image) => {\n    this.showImageFullSize(image)\n   \n  }\n\n  handleClickOpen = (tile) => {\n    this.setState({ \n      open: true,\n      selectedImage: tile.image,\n      selectedTitle: tile.title\n    });\n  }\n\n  handleClose = () => {\n    this.setState({ open: false});\n  }\n\n  showImageFullSize = () =>{\n    return <Dialog\n        open={this.state.open}\n        onClose={this.handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{this.state.selectedTitle}</DialogTitle>\n        <DialogContent>\n          <DialogContent>\n            <div>\n              <img className=\"dialog-image\" src={this.state.selectedImage}/>\n            </div>\n          </DialogContent>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={this.handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n        return(\n          <div className=\"bg-dark\">\n            <Navbar/>\n              <div className=\"container\">\n                <div className=\"bg-dark root\">\n                  <GridList cols={this.getCellsAmount()} cellHeight={180} className=\"gridList\">\n                    {items.map((tile) => (\n                      <GridListTile key={tile.image} onClick={ () => this.handleClickOpen(tile)}>\n                        <img className=\"image-cert\" src={tile.image} alt={tile.title} />\n                        <GridListTileBar subtitle={tile.title}/>\n                      </GridListTile>\n                    ))}\n                  </GridList>\n                </div>\n              </div>\n              {this.showImageFullSize()}\n            <Footer/>\n          </div>\n        );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}