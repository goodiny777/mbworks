{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbabozhko/Development/WebProjects/my-portfolio/src/components/BlogListItem.jsx\";\nimport React from 'react';\nimport \"./BlogListItem.css\";\n\nclass BlogListItem extends React.Component {\n  constructor(props, sideClass, index, title, text) {\n    super(props);\n    this.state = {\n      isTextToggled: false,\n      showText: text,\n      sideClass: sideClass,\n      index: index,\n      title: title\n    };\n    this.prepareText();\n  }\n\n  render() {\n    return React.createElement(\"li\", {\n      className: this.state.sideClass,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"blogItemTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      id: \"blogItemText\",\n      onClick: () => {\n        onTextClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, showText));\n  }\n\n  prepareText() {\n    if (this.state.text.length > 100) {\n      this.state = {\n        isTextToggled: true,\n        showText: text.substring(0, 200)\n      };\n    }\n\n    ;\n  }\n\n  onTextClick() {\n    if (isTextToggled) {\n      showText = text;\n    } else {\n      showText = text.substring(0, 100);\n    }\n\n    var element = document.getElementById(\"blogItemText\");\n    console.log(element + \"   \" + showText);\n    this.setState({});\n    element.value = showText;\n    isTextToggled = !isTextToggled;\n  }\n\n}\n\n;\nexport default BlogListItem;","map":{"version":3,"sources":["/Users/michaelbabozhko/Development/WebProjects/my-portfolio/src/components/BlogListItem.jsx"],"names":["React","BlogListItem","Component","constructor","props","sideClass","index","title","text","state","isTextToggled","showText","prepareText","render","onTextClick","length","substring","element","document","getElementById","console","log","setState","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAsC;AAC7C,UAAMJ,KAAN;AACA,SAAKK,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,KADN;AAETC,MAAAA,QAAQ,EAAEH,IAFD;AAGTH,MAAAA,SAAS,EAAEA,SAHF;AAITC,MAAAA,KAAK,EAAEA,KAJE;AAKTC,MAAAA,KAAK,EAAEA;AALE,KAAb;AAOA,SAAKK,WAAL;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAI,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWJ,SAA1B;AAAqC,MAAA,GAAG,EAAEC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCC,KAAhC,CADJ,EAEI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,OAAO,EAAE,MAAM;AAACO,QAAAA,WAAW;AAAK,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DH,QAA1D,CAFJ,CADJ;AAOH;;AAGDC,EAAAA,WAAW,GAAE;AACT,QAAI,KAAKH,KAAL,CAAWD,IAAX,CAAgBO,MAAhB,GAAyB,GAA7B,EAAkC;AAC9B,WAAKN,KAAL,GAAa;AACTC,QAAAA,aAAa,EAAE,IADN;AAETC,QAAAA,QAAQ,EAAEH,IAAI,CAACQ,SAAL,CAAe,CAAf,EAAiB,GAAjB;AAFD,OAAb;AAIH;;AAAA;AACJ;;AAEDF,EAAAA,WAAW,GAAE;AACT,QAAIJ,aAAJ,EAAkB;AACdC,MAAAA,QAAQ,GAAGH,IAAX;AACH,KAFD,MAEK;AACDG,MAAAA,QAAQ,GAAGH,IAAI,CAACQ,SAAL,CAAe,CAAf,EAAiB,GAAjB,CAAX;AACH;;AACD,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,GAAC,KAAR,GAAcN,QAA1B;AACA,SAAKW,QAAL,CAAc,EAAd;AAGAL,IAAAA,OAAO,CAACM,KAAR,GAAgBZ,QAAhB;AACAD,IAAAA,aAAa,GAAG,CAACA,aAAjB;AACH;;AAhDqC;;AAkDzC;AAED,eAAeT,YAAf","sourcesContent":["import React from 'react';\nimport \"./BlogListItem.css\";\n\nclass BlogListItem extends React.Component{\n\n    constructor(props, sideClass, index, title, text){\n        super(props);\n        this.state = {\n            isTextToggled: false,\n            showText: text,\n            sideClass: sideClass,\n            index: index,\n            title: title\n        };\n        this.prepareText();\n    }\n   \n    \n    render() {\n        return(\n            <li className={this.state.sideClass} key={index}> \n                <div className=\"blogItemTitle\">{title}</div> \n                <div id=\"blogItemText\" onClick={() => {onTextClick(); }}>{showText}</div>\n               \n            </li> \n        );\n    }\n\n\n    prepareText(){\n        if (this.state.text.length > 100) {\n            this.state = {\n                isTextToggled: true,\n                showText: text.substring(0,200)\n            }; \n        };\n    };\n\n    onTextClick(){\n        if (isTextToggled){\n            showText = text;\n        }else{\n            showText = text.substring(0,100);\n        }\n        var element = document.getElementById(\"blogItemText\");\n        console.log(element+\"   \"+showText)\n        this.setState({\n            \n        })\n        element.value = showText;\n        isTextToggled = !isTextToggled;\n    };\n\n};\n\nexport default BlogListItem;"]},"metadata":{},"sourceType":"module"}