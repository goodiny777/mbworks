{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbabozhko/Development/Web/mbworks-master/src/pages/Certificates.jsx\";\nimport React, { useState } from 'react';\nimport \"./Certificates.css\";\nimport firebase from '../Firebase';\nimport Navbar from '../components/Navbar.jsx';\nimport Footer from '../components/Footer.jsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport cert_html from '../assets/certificates/cert_html.jpg';\nimport cert_css from '../assets/certificates/cert_css.jpg';\nimport cert_js from '../assets/certificates/cert_js.jpg';\nimport cert_java from '../assets/certificates/cert_java.jpg';\nimport cert_sql from '../assets/certificates/cert_sql.jpg';\nimport cert_jquery from '../assets/certificates/cert_jquery.jpg';\nimport cert_hg_schoole from '../assets/certificates/highschool.jpg';\nimport cert_hackeru from '../assets/certificates/cert_hackeru.jpg';\nimport ibm_hackaton from '../assets/certificates/ibm_hackaton.jpeg';\nimport cert_node_js from '../assets/certificates/cert_node_js.png';\nimport cert_helsinki_ai from '../assets/certificates/certificate_elements_of_ai.png';\nimport cert_analitics from '../assets/certificates/cert_analitics.jpg';\nexport default class Certificates extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = tile => {\n      console.log(tile);\n      this.setState({\n        open: true\n      }); // this.setState({ selectedImage: tile.image });\n      // this.setState({ dialogTitle: tile.title });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      isTitleToggleOn: false,\n      open: false,\n      selectedImage: \"\",\n      dialogTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const storage = firebase.storage();\n    const sertificatesRef = storage.ref().child('mbworks/images/');\n    sertificatesRef.listAll().then(res => {\n      var data = [];\n      var allData = res.items;\n      res.items.forEach(ref => {\n        ref.getDownloadURL().then(url => {\n          data.push({\n            image: url,\n            title: ref.name.split('.')[0]\n          });\n        }).catch(err => {\n          this.setState({\n            isLoaded: true,\n            error: err\n          });\n        }).finally(() => {\n          if (data.length == allData.length) {\n            data.sort((p0, p1) => {\n              return p0.title.split('_')[1] - p1.title.split('_')[1];\n            });\n            data.forEach(el => {\n              el.title = el.title.split('_')[0];\n            });\n            this.setState({\n              isLoaded: true,\n              items: data\n            });\n          }\n        });\n      });\n    }).catch(err => {\n      this.setState({\n        isLoaded: true,\n        error: err\n      });\n    });\n  }\n\n  showImageFullSize() {\n    return React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"responsive-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.dialogTitle), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      autoFocus: true,\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n  toggleTileBar() {\n    this.tileBarVisibility = !this.tileBarVisibility;\n    return this.tileBarVisibility;\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        cols: 3,\n        cellHeight: 180,\n        className: \"gridList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, items.map(tile => React.createElement(GridListTile, {\n        key: tile.image,\n        onClick: this.handleClickOpen(tile),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image-cert\",\n        onClick: this.onClick,\n        src: tile.image,\n        alt: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(GridListTileBar, {\n        subtitle: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })))))), this.showImageFullSize, React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/michaelbabozhko/Development/Web/mbworks-master/src/pages/Certificates.jsx"],"names":["React","useState","firebase","Navbar","Footer","GridList","GridListTile","GridListTileBar","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","cert_html","cert_css","cert_js","cert_java","cert_sql","cert_jquery","cert_hg_schoole","cert_hackeru","ibm_hackaton","cert_node_js","cert_helsinki_ai","cert_analitics","Certificates","Component","constructor","props","handleClickOpen","tile","console","log","setState","open","handleClose","state","error","isLoaded","items","isTitleToggleOn","selectedImage","dialogTitle","componentDidMount","storage","sertificatesRef","ref","child","listAll","then","res","data","allData","forEach","getDownloadURL","url","push","image","title","name","split","catch","err","finally","length","sort","p0","p1","el","showImageFullSize","toggleTileBar","tileBarVisibility","render","message","map","onClick"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport \"./Certificates.css\";\nimport firebase from '../Firebase';\nimport Navbar from '../components/Navbar.jsx';\nimport Footer from '../components/Footer.jsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport cert_html from '../assets/certificates/cert_html.jpg';\nimport cert_css from '../assets/certificates/cert_css.jpg';\nimport cert_js from '../assets/certificates/cert_js.jpg';\nimport cert_java from '../assets/certificates/cert_java.jpg';\nimport cert_sql from '../assets/certificates/cert_sql.jpg';\nimport cert_jquery from '../assets/certificates/cert_jquery.jpg';\nimport cert_hg_schoole from '../assets/certificates/highschool.jpg';\nimport cert_hackeru from '../assets/certificates/cert_hackeru.jpg';\nimport ibm_hackaton from '../assets/certificates/ibm_hackaton.jpeg';\nimport cert_node_js from '../assets/certificates/cert_node_js.png';\nimport cert_helsinki_ai from '../assets/certificates/certificate_elements_of_ai.png';\nimport cert_analitics from '../assets/certificates/cert_analitics.jpg';\n\nexport default class Certificates extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n        error: null,\n        isLoaded: false,\n        items: [],\n        isTitleToggleOn: false,\n        open: false,\n        selectedImage: \"\",\n        dialogTitle: \"\",\n      };\n  } \n\n  componentDidMount(){\n    const storage = firebase.storage();\n    const sertificatesRef = storage.ref().child('mbworks/images/');\n\n    sertificatesRef.listAll()\n    .then((res) => {\n      var data = [];\n      var allData = res.items;\n      res.items.forEach(ref => {\n        ref.getDownloadURL()\n        .then((url) => {\n          data.push({image: url, title: ref.name.split('.')[0] });\n        })\n        .catch((err) => {\n          this.setState({\n            isLoaded: true,\n            error:err\n          });\n        })\n        .finally(() => {\n          if (data.length == allData.length){\n            data.sort((p0, p1) => {\n              return p0.title.split('_')[1] - p1.title.split('_')[1] \n            });\n            data.forEach((el) => { \n              el.title = el.title.split('_')[0] \n            });\n            this.setState({\n              isLoaded:true,\n              items: data\n            })\n          }\n        });\n      })\n    })\n    .catch((err) => {\n      this.setState({\n        isLoaded: true,\n        error:err\n      });\n    });\n\n  }\n\n  handleClickOpen = (tile) => {\n    console.log(tile);\n    this.setState({ open: true });\n    // this.setState({ selectedImage: tile.image });\n    // this.setState({ dialogTitle: tile.title });\n  }\n\n  handleClose = () => {\n    this.setState({ open: false});\n  }\n\n  showImageFullSize(){\n    return <Dialog\n        open={this.state.open}\n        onClose={this.handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n        <DialogContent>\n          <DialogContent>\n              <img src={this.state.selectedImage}/>\n          </DialogContent>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={this.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n  }\n\n  toggleTileBar() {\n    this.tileBarVisibility = !this.tileBarVisibility\n    return this.tileBarVisibility\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n        return(\n          <div className=\"bg-dark\">\n            <Navbar/>\n              <div className=\"container\">\n                <div className=\"bg-dark root\">\n                  <GridList cols={3} cellHeight={180} className=\"gridList\">\n                    {items.map((tile) => (\n                      <GridListTile key={tile.image} onClick={this.handleClickOpen(tile)}>\n                        <img className=\"image-cert\" onClick={this.onClick} src={tile.image} alt={tile.title} />\n                        <GridListTileBar subtitle={tile.title}/>\n                      </GridListTile>\n                    ))}\n                  </GridList>\n                </div>\n              </div>\n              {this.showImageFullSize}\n            <Footer/>\n          </div>\n        );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}